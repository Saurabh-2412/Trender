{"ast":null,"code":"var _jsxFileName = \"E:\\\\NeogCampProjects\\\\LevelOneProjects\\\\Social-Media\\\\social-media-app\\\\src\\\\features\\\\posts\\\\CommentButton.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { postComment } from \"./postSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CommentListner({\n  postedComments\n}) {\n  /* const latestPost = postedComments.map((postedElement) => postedElement.userId === \"654321\" );\r\n  console.log(latestPost); */\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n_c = CommentListner;\nexport function CommentOnPost({\n  post\n}) {\n  _s();\n\n  const [textBox, textBoxSetter] = useState(\"none\");\n  const [comment, setComment] = useState(\"\");\n  const dispatch = useDispatch();\n  const [pending, setPending] = useState(\"idle\");\n\n  function textBoxToggle() {\n    if (textBox === \"none\") {\n      textBoxSetter(\"block\");\n    } else {\n      textBoxSetter(\"none\");\n    }\n  }\n\n  function handleOnclickHandler(post) {\n    dispatch(postComment({\n      postid: post._id,\n      comment\n    }));\n    textBoxSetter(\"none\");\n    setComment(\"\");\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => textBoxToggle(post),\n      children: \"Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center flex-col my-3\",\n      style: {\n        display: `${textBox}`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        autoFocus: true,\n        className: \"w-11/12 md:w-11/12 bg-gray-200 rounded-lg p-2\",\n        coloums: \"40\",\n        placeholder: \"Would you like to make a comment?\",\n        value: comment,\n        onChange: e => setComment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline self-end mr-3 mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"comment-buttons\",\n          onClick: () => textBoxToggle(),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"comment-buttons\",\n          onClick: () => handleOnclickHandler(post),\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CommentListner, {\n      post: post\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CommentOnPost, \"c+Up681J8WpJru2r0leSvFcGqak=\", false, function () {\n  return [useDispatch];\n});\n\n_c2 = CommentOnPost;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CommentListner\");\n$RefreshReg$(_c2, \"CommentOnPost\");","map":{"version":3,"sources":["E:/NeogCampProjects/LevelOneProjects/Social-Media/social-media-app/src/features/posts/CommentButton.js"],"names":["React","useState","useSelector","useDispatch","postComment","CommentListner","postedComments","CommentOnPost","post","textBox","textBoxSetter","comment","setComment","dispatch","pending","setPending","textBoxToggle","handleOnclickHandler","postid","_id","display","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,OAAO,SAASC,cAAT,CAAwB;AAAEC,EAAAA;AAAF,CAAxB,EAA2C;AAC9C;AACJ;AACI,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;KAReD,c;AAUhB,OAAO,SAASE,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAAgC;AAAA;;AACnC,QAAM,CAAEC,OAAF,EAAWC,aAAX,IAA6BT,QAAQ,CAAC,MAAD,CAA3C;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMY,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,MAAD,CAAtC;;AAEA,WAASe,aAAT,GAAwB;AACpB,QAAGP,OAAO,KAAK,MAAf,EAAsB;AAClBC,MAAAA,aAAa,CAAC,OAAD,CAAb;AACH,KAFD,MAEO;AACHA,MAAAA,aAAa,CAAC,MAAD,CAAb;AACH;AACJ;;AAED,WAASO,oBAAT,CAA+BT,IAA/B,EAAqC;AACjCK,IAAAA,QAAQ,CAACT,WAAW,CAAC;AAAEc,MAAAA,MAAM,EAAEV,IAAI,CAACW,GAAf;AAAoBR,MAAAA;AAApB,KAAD,CAAZ,CAAR;AACAD,IAAAA,aAAa,CAAC,MAAD,CAAb;AACAE,IAAAA,UAAU,CAAC,EAAD,CAAV;AACH;;AAAA;AAED,sBACI;AAAA,4BACI;AAAQ,MAAA,OAAO,EAAE,MAAMI,aAAa,CAACR,IAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAiD,MAAA,KAAK,EAAE;AAAEY,QAAAA,OAAO,EAAE,GAAEX,OAAQ;AAArB,OAAxD;AAAA,8BACI;AACE,QAAA,SAAS,EAAE,IADb;AAEE,QAAA,SAAS,EAAC,+CAFZ;AAGE,QAAA,OAAO,EAAC,IAHV;AAIE,QAAA,WAAW,EAAC,mCAJd;AAKE,QAAA,KAAK,EAAEE,OALT;AAME,QAAA,QAAQ,EAAGU,CAAD,IAAOT,UAAU,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV;AAN7B;AAAA;AAAA;AAAA;AAAA,cADJ,eASe;AAAA;AAAA;AAAA;AAAA,cATf,eAUI;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA,gCACI;AACI,UAAA,SAAS,EAAC,iBADd;AAEI,UAAA,OAAO,EAAE,MAAMP,aAAa,EAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AACI,UAAA,SAAS,EAAC,iBADd;AAEI,UAAA,OAAO,EAAE,MAAMC,oBAAoB,CAACT,IAAD,CAFvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAuBI,QAAC,cAAD;AAAgB,MAAA,IAAI,EAAEA;AAAtB;AAAA;AAAA;AAAA;AAAA,YAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH;;GA/CeD,a;UAGKJ,W;;;MAHLI,a","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { postComment } from \"./postSlice\";\r\n\r\nexport function CommentListner({ postedComments }){\r\n    /* const latestPost = postedComments.map((postedElement) => postedElement.userId === \"654321\" );\r\n    console.log(latestPost); */\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport function CommentOnPost({ post }){\r\n    const [ textBox, textBoxSetter ] = useState(\"none\");\r\n    const [comment, setComment] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n    const [pending, setPending] = useState(\"idle\");\r\n    \r\n    function textBoxToggle(){\r\n        if(textBox === \"none\"){\r\n            textBoxSetter(\"block\");\r\n        } else {\r\n            textBoxSetter(\"none\");\r\n        }\r\n    }\r\n\r\n    function handleOnclickHandler (post) {\r\n        dispatch(postComment({ postid: post._id, comment }));\r\n        textBoxSetter(\"none\");\r\n        setComment(\"\");\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={() => textBoxToggle(post)}>Comment</button>\r\n            <div className=\"flex items-center flex-col my-3\" style={{ display:`${textBox}` }}>\r\n                <textarea\r\n                  autoFocus={true}\r\n                  className=\"w-11/12 md:w-11/12 bg-gray-200 rounded-lg p-2\"\r\n                  coloums=\"40\"\r\n                  placeholder=\"Would you like to make a comment?\"\r\n                  value={comment}\r\n                  onChange={(e) => setComment(e.target.value)}\r\n                  >\r\n                </textarea><br/>\r\n                <div className=\"inline self-end mr-3 mt-2\">\r\n                    <button\r\n                        className=\"comment-buttons\"\r\n                        onClick={() => textBoxToggle()}\r\n                    >Cancel</button>\r\n                    <button\r\n                        className=\"comment-buttons\"\r\n                        onClick={() => handleOnclickHandler(post)}\r\n                    >Save</button>\r\n                </div>\r\n            </div>\r\n            <CommentListner post={post}/>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}