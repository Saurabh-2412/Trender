{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst fetchPosts = async () => {\n  return axios.get(\"https://Social-Media.saurabhsharma11.repl.co/v1/posts\");\n};\n\nexport const loadPosts = createAsyncThunk(\"posts/loadPosts\", async () => {\n  const response = await fetchPosts();\n  return response.data;\n});\nexport const createPost = createAsyncThunk(\"post/createPost\", async ({\n  content,\n  image\n}, {\n  fulfillWithValue,\n  rejectWithValue\n}) => {\n  let postData = {\n    userID: \"123456\",\n    desc: content,\n    status: \"A\",\n    likes: 0,\n    comments: [],\n    createdDate: Date.now(),\n    modifiedData: Date.now()\n  };\n\n  if (image) {\n    const formData = new FormData();\n    const fileName = Date().now + image.name;\n    formData.append(\"image\", image);\n    formData.append(\"name\", fileName);\n\n    try {\n      const {\n        data,\n        status\n      } = await axios.post(\"https://social-media.saurabhsharma11.repl.co/v1/images/upload\", formData);\n\n      if (status === 201) {\n        postData.image = data.url;\n      }\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  try {\n    const {\n      data\n    } = await axios.post(\"https://social-media.saurabhsharma11.repl.co/v1/posts\", postData);\n    return fulfillWithValue(data.post);\n  } catch (error) {\n    return rejectWithValue(error.response);\n  }\n});\nexport const postSlice = createSlice({\n  name: \"posts\",\n  initialState: {\n    status: \"idle\",\n    error: null,\n    posts: []\n  },\n  reducers: {\n    postAdded(state, action) {\n      console.log(action.payload);\n      console.log(state);\n      state.posts.push(action.payload);\n    },\n\n    LikesClicked: (state, action) => {\n      const posts = state.posts.map(post => post.postID === action.payload ? { ...post,\n        likes: post.likes + 1\n      } : post);\n      return { ...state,\n        posts\n      };\n    },\n    DisLikesClicked: (state, action) => {\n      const postIndex = state.posts.findIndex(post => post.postID === action.payload);\n      state.posts[postIndex].likes -= 1;\n    }\n  },\n  extraReducers: {\n    [createPost.fulfilled]: (state, action) => {\n      state.posts.push(action.payload);\n      console.log(\"reducer\", action.payload.post);\n    },\n    [loadPosts.pending]: state => {\n      state.status = \"loading\";\n    },\n    [loadPosts.fulfilled]: (state, {\n      payload\n    }) => {\n      state.status = \"fulfilled\";\n      state.posts = payload.posts;\n    },\n    [loadPosts.rejected]: (state, action) => {\n      state.status = \"error\";\n      state.error = action.error.message;\n    }\n  }\n});\nexport const {\n  LikesClicked,\n  DisLikesClicked,\n  postAdded\n} = postSlice.actions;\nexport default postSlice.reducer;","map":{"version":3,"sources":["E:/NeogCampProjects/LevelOneProjects/Social-Media/social-media-app/src/features/posts/postSlice.js"],"names":["createAsyncThunk","createSlice","axios","fetchPosts","get","loadPosts","response","data","createPost","content","image","fulfillWithValue","rejectWithValue","postData","userID","desc","status","likes","comments","createdDate","Date","now","modifiedData","formData","FormData","fileName","name","append","post","url","err","console","log","message","error","postSlice","initialState","posts","reducers","postAdded","state","action","payload","push","LikesClicked","map","postID","DisLikesClicked","postIndex","findIndex","extraReducers","fulfilled","pending","rejected","actions","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAU,GAAG,YAAY;AAC3B,SAAOD,KAAK,CAACE,GAAN,CAAU,uDAAV,CAAP;AACH,CAFD;;AAIA,OAAO,MAAMC,SAAS,GAAGL,gBAAgB,CAAC,iBAAD,EAAoB,YAAY;AACrE,QAAMM,QAAQ,GAAG,MAAMH,UAAU,EAAjC;AACA,SAAOG,QAAQ,CAACC,IAAhB;AACH,CAHwC,CAAlC;AAKP,OAAO,MAAMC,UAAU,GAAGR,gBAAgB,CAAC,iBAAD,EACtC,OAAO;AAAES,EAAAA,OAAF;AAAUC,EAAAA;AAAV,CAAP,EAA0B;AAAEC,EAAAA,gBAAF;AAAoBC,EAAAA;AAApB,CAA1B,KAAoE;AAChE,MAAIC,QAAQ,GAAG;AACXC,IAAAA,MAAM,EAAE,QADG;AAEXC,IAAAA,IAAI,EAAEN,OAFK;AAGXO,IAAAA,MAAM,EAAE,GAHG;AAIXC,IAAAA,KAAK,EAAE,CAJI;AAKXC,IAAAA,QAAQ,EAAE,EALC;AAMXC,IAAAA,WAAW,EAAEC,IAAI,CAACC,GAAL,EANF;AAOXC,IAAAA,YAAY,EAAEF,IAAI,CAACC,GAAL;AAPH,GAAf;;AAUA,MAAIX,KAAJ,EAAW;AACP,UAAMa,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACA,UAAMC,QAAQ,GAAGL,IAAI,GAAGC,GAAP,GAAaX,KAAK,CAACgB,IAApC;AACAH,IAAAA,QAAQ,CAACI,MAAT,CAAgB,OAAhB,EAAyBjB,KAAzB;AACAa,IAAAA,QAAQ,CAACI,MAAT,CAAgB,MAAhB,EAAwBF,QAAxB;;AACA,QAAI;AACA,YAAM;AAAElB,QAAAA,IAAF;AAAQS,QAAAA;AAAR,UAAmB,MAAMd,KAAK,CAAC0B,IAAN,CAC3B,+DAD2B,EAE3BL,QAF2B,CAA/B;;AAIA,UAAIP,MAAM,KAAK,GAAf,EAAoB;AAChBH,QAAAA,QAAQ,CAACH,KAAT,GAAiBH,IAAI,CAACsB,GAAtB;AACH;AACJ,KARD,CAQE,OAAOC,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACH;AACJ;;AAED,MAAI;AACA,UAAM;AAAE1B,MAAAA;AAAF,QAAW,MAAML,KAAK,CAAC0B,IAAN,CACvB,uDADuB,EAEnBf,QAFmB,CAAvB;AAIA,WAAOF,gBAAgB,CAACJ,IAAI,CAACqB,IAAN,CAAvB;AACH,GAND,CAME,OAAOM,KAAP,EAAc;AACZ,WAAOtB,eAAe,CAACsB,KAAK,CAAC5B,QAAP,CAAtB;AACH;AACJ,CAvCqC,CAAnC;AA0CP,OAAO,MAAM6B,SAAS,GAAGlC,WAAW,CAAC;AACjCyB,EAAAA,IAAI,EAAE,OAD2B;AAEjCU,EAAAA,YAAY,EAAE;AACVpB,IAAAA,MAAM,EAAE,MADE;AAEVkB,IAAAA,KAAK,EAAE,IAFG;AAGVG,IAAAA,KAAK,EAAE;AAHG,GAFmB;AAOjCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACrBV,MAAAA,OAAO,CAACC,GAAR,CAAYS,MAAM,CAACC,OAAnB;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACAA,MAAAA,KAAK,CAACH,KAAN,CAAYM,IAAZ,CAAiBF,MAAM,CAACC,OAAxB;AACH,KALK;;AAMNE,IAAAA,YAAY,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAC7B,YAAMJ,KAAK,GAAGG,KAAK,CAACH,KAAN,CAAYQ,GAAZ,CAAiBjB,IAAD,IAC1BA,IAAI,CAACkB,MAAL,KAAgBL,MAAM,CAACC,OAAvB,GACE,EAAE,GAAGd,IAAL;AAAWX,QAAAA,KAAK,EAAEW,IAAI,CAACX,KAAL,GAAa;AAA/B,OADF,GAEEW,IAHQ,CAAd;AAKA,aAAO,EAAE,GAAGY,KAAL;AAAYH,QAAAA;AAAZ,OAAP;AACH,KAbK;AAcNU,IAAAA,eAAe,EAAE,CAACP,KAAD,EAAQC,MAAR,KAAmB;AAChC,YAAMO,SAAS,GAAGR,KAAK,CAACH,KAAN,CAAYY,SAAZ,CACbrB,IAAD,IAAUA,IAAI,CAACkB,MAAL,KAAgBL,MAAM,CAACC,OADnB,CAAlB;AAGAF,MAAAA,KAAK,CAACH,KAAN,CAAYW,SAAZ,EAAuB/B,KAAvB,IAAgC,CAAhC;AACH;AAnBK,GAPuB;AA4BjCiC,EAAAA,aAAa,EAAE;AACX,KAAC1C,UAAU,CAAC2C,SAAZ,GAAwB,CAACX,KAAD,EAAQC,MAAR,KAAmB;AACvCD,MAAAA,KAAK,CAACH,KAAN,CAAYM,IAAZ,CAAiBF,MAAM,CAACC,OAAxB;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBS,MAAM,CAACC,OAAP,CAAed,IAAtC;AACH,KAJU;AAKX,KAACvB,SAAS,CAAC+C,OAAX,GAAsBZ,KAAD,IAAW;AAC5BA,MAAAA,KAAK,CAACxB,MAAN,GAAe,SAAf;AACH,KAPU;AAQX,KAACX,SAAS,CAAC8C,SAAX,GAAuB,CAACX,KAAD,EAAQ;AAAEE,MAAAA;AAAF,KAAR,KAAwB;AAC3CF,MAAAA,KAAK,CAACxB,MAAN,GAAe,WAAf;AACAwB,MAAAA,KAAK,CAACH,KAAN,GAAcK,OAAO,CAACL,KAAtB;AACH,KAXU;AAYX,KAAChC,SAAS,CAACgD,QAAX,GAAsB,CAACb,KAAD,EAAQC,MAAR,KAAmB;AACrCD,MAAAA,KAAK,CAACxB,MAAN,GAAe,OAAf;AACAwB,MAAAA,KAAK,CAACN,KAAN,GAAcO,MAAM,CAACP,KAAP,CAAaD,OAA3B;AACH;AAfU;AA5BkB,CAAD,CAA7B;AA+CP,OAAO,MAAM;AAAEW,EAAAA,YAAF;AAAgBG,EAAAA,eAAhB;AAAiCR,EAAAA;AAAjC,IAA+CJ,SAAS,CAACmB,OAA/D;AACP,eAAenB,SAAS,CAACoB,OAAzB","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst fetchPosts = async () => {\r\n    return axios.get(\"https://Social-Media.saurabhsharma11.repl.co/v1/posts\");\r\n};\r\n\r\nexport const loadPosts = createAsyncThunk(\"posts/loadPosts\", async () => {\r\n    const response = await fetchPosts();\r\n    return response.data;\r\n});\r\n\r\nexport const createPost = createAsyncThunk(\"post/createPost\",\r\n    async ({ content,image }, { fulfillWithValue, rejectWithValue }) => {\r\n        let postData = {\r\n            userID: \"123456\",\r\n            desc: content,\r\n            status: \"A\",\r\n            likes: 0,\r\n            comments: [],\r\n            createdDate: Date.now(),\r\n            modifiedData: Date.now()\r\n        };\r\n\r\n        if (image) {\r\n            const formData = new FormData();\r\n            const fileName = Date().now + image.name;\r\n            formData.append(\"image\", image);\r\n            formData.append(\"name\", fileName);\r\n            try {\r\n                const { data, status } = await axios.post(\r\n                    \"https://social-media.saurabhsharma11.repl.co/v1/images/upload\",\r\n                    formData\r\n                );\r\n                if (status === 201) {\r\n                    postData.image = data.url;\r\n                }\r\n            } catch (err) {\r\n                console.log(err.message);\r\n            }\r\n        }\r\n\r\n        try {\r\n            const { data } = await axios.post(\r\n            \"https://social-media.saurabhsharma11.repl.co/v1/posts\",\r\n                postData\r\n            );\r\n            return fulfillWithValue(data.post);\r\n        } catch (error) {\r\n            return rejectWithValue(error.response);\r\n        }\r\n    }\r\n);\r\n\r\nexport const postSlice = createSlice({\r\n    name: \"posts\",\r\n    initialState: {\r\n        status: \"idle\",\r\n        error: null,\r\n        posts: []\r\n    },\r\n    reducers: {\r\n        postAdded(state, action) {\r\n            console.log(action.payload);\r\n            console.log(state);\r\n            state.posts.push(action.payload);\r\n        },\r\n        LikesClicked: (state, action) => {\r\n            const posts = state.posts.map((post) =>\r\n                post.postID === action.payload\r\n                ? { ...post, likes: post.likes + 1 }\r\n                : post\r\n            );\r\n            return { ...state, posts };\r\n        },\r\n        DisLikesClicked: (state, action) => {\r\n            const postIndex = state.posts.findIndex(\r\n                (post) => post.postID === action.payload\r\n            );\r\n            state.posts[postIndex].likes -= 1;\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [createPost.fulfilled]: (state, action) => {\r\n            state.posts.push(action.payload);\r\n            console.log(\"reducer\", action.payload.post);\r\n        },\r\n        [loadPosts.pending]: (state) => {\r\n            state.status = \"loading\";\r\n        },\r\n        [loadPosts.fulfilled]: (state, { payload }) => {\r\n            state.status = \"fulfilled\";\r\n            state.posts = payload.posts;\r\n        },\r\n        [loadPosts.rejected]: (state, action) => {\r\n            state.status = \"error\";\r\n            state.error = action.error.message;\r\n        }\r\n    }\r\n});\r\n\r\nexport const { LikesClicked, DisLikesClicked, postAdded } = postSlice.actions;\r\nexport default postSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}