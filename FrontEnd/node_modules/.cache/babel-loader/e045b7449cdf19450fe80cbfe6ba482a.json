{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { axios } from \"axios\";\n\nconst fetchPost = async () => {\n  return axios.get(\"https://social-media.saurabhsharma11.repl.co/v1/posts\");\n};\n\nexport const loadPosts = createAsyncThunk(\"posts/loadPosts\", async () => {\n  const response = await fetchPost();\n  return response.data;\n});\n/* const initialState = [\r\n    { id: '1', title: 'First Post!', content: 'First Post' },\r\n    { id: '2', title: 'Second Post', content: 'Second Post' }\r\n] */\n\nconst postSlice = createSlice({\n  name: 'posts',\n  initialState: {\n    status: 'idle',\n    error: null,\n    posts: []\n  },\n  reducers: {}\n});\nexport const {\n  postAdded\n} = postSlice.actions;\nexport default postSlice.reducer;","map":{"version":3,"sources":["E:/NeogCampProjects/LevelOneProjects/Social-Media/social-media-app/src/features/posts/postSlice.js"],"names":["createSlice","createAsyncThunk","axios","fetchPost","get","loadPosts","response","data","postSlice","name","initialState","status","error","posts","reducers","postAdded","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAqBC,gBAArB,QAA6C,kBAA7C;AACA,SAASC,KAAT,QAAsB,OAAtB;;AAEI,MAAMC,SAAS,GAAG,YAAY;AAC1B,SAAOD,KAAK,CAACE,GAAN,CAAU,uDAAV,CAAP;AACH,CAFD;;AAIA,OAAO,MAAMC,SAAS,GAAGJ,gBAAgB,CAAC,iBAAD,EAAoB,YAAY;AACrE,QAAMK,QAAQ,GAAG,MAAMH,SAAS,EAAhC;AACA,SAAOG,QAAQ,CAACC,IAAhB;AACD,CAHsC,CAAlC;AAKP;AACJ;AACA;AACA;;AAEI,MAAMC,SAAS,GAAGR,WAAW,CAAC;AAC1BS,EAAAA,IAAI,EAAE,OADoB;AAE1BC,EAAAA,YAAY,EAAE;AACVC,IAAAA,MAAM,EAAC,MADG;AAEVC,IAAAA,KAAK,EAAC,IAFI;AAGVC,IAAAA,KAAK,EAAC;AAHI,GAFY;AAO1BC,EAAAA,QAAQ,EAAE;AAPgB,CAAD,CAA7B;AAUJ,OAAO,MAAM;AAAEC,EAAAA;AAAF,IAAgBP,SAAS,CAACQ,OAAhC;AACP,eAAeR,SAAS,CAACS,OAAzB","sourcesContent":["import { createSlice,createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { axios } from \"axios\";\r\n\r\n    const fetchPost = async () => {\r\n        return axios.get(\"https://social-media.saurabhsharma11.repl.co/v1/posts\");\r\n    }\r\n\r\n    export const loadPosts = createAsyncThunk(\"posts/loadPosts\", async () => {\r\n        const response = await fetchPost();\r\n        return response.data;\r\n      });\r\n\r\n    /* const initialState = [\r\n        { id: '1', title: 'First Post!', content: 'First Post' },\r\n        { id: '2', title: 'Second Post', content: 'Second Post' }\r\n    ] */\r\n\r\n    const postSlice = createSlice({\r\n        name: 'posts',\r\n        initialState: {\r\n            status:'idle',\r\n            error:null,\r\n            posts:[]\r\n        },\r\n        reducers: {}\r\n    })\r\n\r\nexport const { postAdded } = postSlice.actions;\r\nexport default postSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}