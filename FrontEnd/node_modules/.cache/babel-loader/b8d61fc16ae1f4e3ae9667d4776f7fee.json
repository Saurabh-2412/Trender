{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const fetchUser = createAsyncThunk(\"users/fetchUser\", async (username, {\n  fulfillWithValue,\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.get(`https://Social-Media.saurabhsharma11.repl.co/v1/userProfile/${username}`);\n    return fulfillWithValue(response.data);\n  } catch (error) {\n    return rejectWithValue(error.response);\n  }\n});\nexport const userSlice = createSlice({\n  name: \"users\",\n  initialState: {\n    user: \"\",\n    followers: [],\n    following: [],\n    status: \"idle\",\n    error: null\n  },\n  reducers: {},\n  extraReducers: {\n    [fetchUser.pending]: (state, action) => {\n      state.status = \"pending\";\n    },\n    [fetchUser.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.user = action.payload;\n    },\n    [fetchUser.rejected]: (state, action) => {\n      state.status = \"failed\";\n      state.error = action.error;\n    }\n  }\n});\nexport const {} = userSlice.actions;\nexport default userSlice.reducer;\nexport const selectUserById = (state, username) => state.user.userDb.find(item => item.username === username);","map":{"version":3,"sources":["E:/NeogCampProjects/LevelOneProjects/Social-Media/social-media-app/src/features/user/userSlice.js"],"names":["createAsyncThunk","createSlice","axios","fetchUser","username","fulfillWithValue","rejectWithValue","response","get","data","error","userSlice","name","initialState","user","followers","following","status","reducers","extraReducers","pending","state","action","fulfilled","payload","rejected","actions","reducer","selectUserById","userDb","find","item"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAGH,gBAAgB,CACvC,iBADuC,EAEvC,OAAOI,QAAP,EAAiB;AAAEC,EAAAA,gBAAF;AAAoBC,EAAAA;AAApB,CAAjB,KAA2D;AACzD,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAN,CACpB,+DAA8DJ,QAAS,EADnD,CAAvB;AAGA,WAAOC,gBAAgB,CAACE,QAAQ,CAACE,IAAV,CAAvB;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACd,WAAOJ,eAAe,CAACI,KAAK,CAACH,QAAP,CAAtB;AACD;AACF,CAXsC,CAAlC;AAcP,OAAO,MAAMI,SAAS,GAAGV,WAAW,CAAC;AACjCW,EAAAA,IAAI,EAAE,OAD2B;AAEjCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,IAAI,EAAE,EADI;AAEVC,IAAAA,SAAS,EAAE,EAFD;AAGVC,IAAAA,SAAS,EAAE,EAHD;AAIVC,IAAAA,MAAM,EAAE,MAJE;AAKVP,IAAAA,KAAK,EAAE;AALG,GAFmB;AASjCQ,EAAAA,QAAQ,EAAE,EATuB;AAUjCC,EAAAA,aAAa,EAAE;AACb,KAAChB,SAAS,CAACiB,OAAX,GAAqB,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtCD,MAAAA,KAAK,CAACJ,MAAN,GAAe,SAAf;AACD,KAHY;AAIb,KAACd,SAAS,CAACoB,SAAX,GAAuB,CAACF,KAAD,EAAQC,MAAR,KAAmB;AACxCD,MAAAA,KAAK,CAACJ,MAAN,GAAe,SAAf;AACAI,MAAAA,KAAK,CAACP,IAAN,GAAaQ,MAAM,CAACE,OAApB;AACD,KAPY;AAQb,KAACrB,SAAS,CAACsB,QAAX,GAAsB,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AACvCD,MAAAA,KAAK,CAACJ,MAAN,GAAe,QAAf;AACAI,MAAAA,KAAK,CAACX,KAAN,GAAcY,MAAM,CAACZ,KAArB;AACD;AAXY;AAVkB,CAAD,CAA7B;AAyBP,OAAO,MAAM,KAAMC,SAAS,CAACe,OAAtB;AAEP,eAAef,SAAS,CAACgB,OAAzB;AAEA,OAAO,MAAMC,cAAc,GAAG,CAACP,KAAD,EAAQjB,QAAR,KAC5BiB,KAAK,CAACP,IAAN,CAAWe,MAAX,CAAkBC,IAAlB,CAAwBC,IAAD,IAAUA,IAAI,CAAC3B,QAAL,KAAkBA,QAAnD,CADK","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nexport const fetchUser = createAsyncThunk(\r\n  \"users/fetchUser\",\r\n  async (username, { fulfillWithValue, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `https://Social-Media.saurabhsharma11.repl.co/v1/userProfile/${username}`\r\n      );\r\n      return fulfillWithValue(response.data);\r\n    } catch (error) {\r\n      return rejectWithValue(error.response);\r\n    }\r\n  }\r\n);\r\n\r\nexport const userSlice = createSlice({\r\n    name: \"users\",\r\n    initialState: {\r\n        user: \"\",\r\n        followers: [],\r\n        following: [],\r\n        status: \"idle\",\r\n        error: null\r\n    },\r\n    reducers: { },\r\n    extraReducers: {\r\n      [fetchUser.pending]: (state, action) => {\r\n        state.status = \"pending\";\r\n      },\r\n      [fetchUser.fulfilled]: (state, action) => {\r\n        state.status = \"success\";\r\n        state.user = action.payload;\r\n      },\r\n      [fetchUser.rejected]: (state, action) => {\r\n        state.status = \"failed\";\r\n        state.error = action.error;\r\n      }\r\n    }\r\n});\r\n\r\nexport const { } = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n\r\nexport const selectUserById = (state, username) =>\r\n  state.user.userDb.find((item) => item.username === username);"]},"metadata":{},"sourceType":"module"}