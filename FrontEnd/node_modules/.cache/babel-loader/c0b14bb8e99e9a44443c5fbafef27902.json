{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { toastSuccess } from \"../Utils/ToastMessages\";\nimport { setupAuthHeaderForServiceCalls } from \"./ServiceHandler\";\nimport { clearLocalStorage, setlocalStorage } from \"./Storage\";\nexport const userRegisteration = createAsyncThunk(\"auth/signup\", async (values, {\n  fulfillWithValue,\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post(\"https://Social-Media.saurabhsharma11.repl.co/v1/userAuth/signup\", values);\n\n    if (response.status === 201) {\n      toastSuccess(\"User Registered Successfully\");\n    }\n\n    return fulfillWithValue(response);\n  } catch (error) {\n    return rejectWithValue(error.response);\n  }\n});\nexport const login = createAsyncThunk(\"auth/login\", async (values, {\n  fulfillWithValue,\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post(\"https://Social-Media.saurabhsharma11.repl.co/v1/userAuth/login\", values);\n\n    if (response.status === 200) {\n      setupAuthHeaderForServiceCalls(response.data.token);\n      setlocalStorage(response.data.userdata, response.data.token);\n    }\n\n    return fulfillWithValue(response.data);\n  } catch (error) {\n    return rejectWithValue(error.response);\n  }\n});","map":{"version":3,"sources":["E:/NeogCampProjects/LevelOneProjects/Social-Media/social-media-app/src/features/authentication/AuthSlice.js"],"names":["createAsyncThunk","createSlice","axios","toastSuccess","setupAuthHeaderForServiceCalls","clearLocalStorage","setlocalStorage","userRegisteration","values","fulfillWithValue","rejectWithValue","response","post","status","error","login","data","token","userdata"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,wBAA7B;AACA,SAASC,8BAAT,QAA+C,kBAA/C;AACA,SAASC,iBAAT,EAA4BC,eAA5B,QAAmD,WAAnD;AAEA,OAAO,MAAMC,iBAAiB,GAAGP,gBAAgB,CAAC,aAAD,EAAe,OAAMQ,MAAN,EAAc;AAAEC,EAAAA,gBAAF;AAAoBC,EAAAA;AAApB,CAAd,KAAuD;AACnH,MAAG;AACC,UAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAN,CAAW,iEAAX,EAA8EJ,MAA9E,CAAvB;;AACA,QAAGG,QAAQ,CAACE,MAAT,KAAoB,GAAvB,EAA2B;AACvBV,MAAAA,YAAY,CAAC,8BAAD,CAAZ;AACH;;AACD,WAAOM,gBAAgB,CAACE,QAAD,CAAvB;AACH,GAND,CAOA,OAAMG,KAAN,EAAY;AACR,WAAOJ,eAAe,CAACI,KAAK,CAACH,QAAP,CAAtB;AACH;AACJ,CAXgD,CAA1C;AAaP,OAAO,MAAMI,KAAK,GAAGf,gBAAgB,CACjC,YADiC,EAEjC,OAAOQ,MAAP,EAAe;AAAEC,EAAAA,gBAAF;AAAoBC,EAAAA;AAApB,CAAf,KAAyD;AACvD,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAN,CACrB,gEADqB,EAErBJ,MAFqB,CAAvB;;AAKA,QAAIG,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AAC3BT,MAAAA,8BAA8B,CAACO,QAAQ,CAACK,IAAT,CAAcC,KAAf,CAA9B;AACAX,MAAAA,eAAe,CAACK,QAAQ,CAACK,IAAT,CAAcE,QAAf,EAAyBP,QAAQ,CAACK,IAAT,CAAcC,KAAvC,CAAf;AACD;;AACD,WAAOR,gBAAgB,CAACE,QAAQ,CAACK,IAAV,CAAvB;AACD,GAXD,CAWE,OAAOF,KAAP,EAAc;AACd,WAAOJ,eAAe,CAACI,KAAK,CAACH,QAAP,CAAtB;AACD;AACF,CAjBgC,CAA9B","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { toastSuccess } from \"../Utils/ToastMessages\";\r\nimport { setupAuthHeaderForServiceCalls } from \"./ServiceHandler\";\r\nimport { clearLocalStorage, setlocalStorage } from \"./Storage\";\r\n\r\nexport const userRegisteration = createAsyncThunk(\"auth/signup\",async(values, { fulfillWithValue, rejectWithValue }) =>{\r\n    try{\r\n        const response = await axios.post(\"https://Social-Media.saurabhsharma11.repl.co/v1/userAuth/signup\", values);\r\n        if(response.status === 201){\r\n            toastSuccess(\"User Registered Successfully\");\r\n        }\r\n        return fulfillWithValue(response);\r\n    }\r\n    catch(error){\r\n        return rejectWithValue(error.response);\r\n    }\r\n})\r\n\r\nexport const login = createAsyncThunk(\r\n    \"auth/login\",\r\n    async (values, { fulfillWithValue, rejectWithValue }) => {\r\n      try {\r\n        const response = await axios.post(\r\n          \"https://Social-Media.saurabhsharma11.repl.co/v1/userAuth/login\",\r\n          values\r\n        );\r\n  \r\n        if (response.status === 200) {\r\n          setupAuthHeaderForServiceCalls(response.data.token);\r\n          setlocalStorage(response.data.userdata, response.data.token);\r\n        }\r\n        return fulfillWithValue(response.data);\r\n      } catch (error) {\r\n        return rejectWithValue(error.response);\r\n      }\r\n    }\r\n  );"]},"metadata":{},"sourceType":"module"}