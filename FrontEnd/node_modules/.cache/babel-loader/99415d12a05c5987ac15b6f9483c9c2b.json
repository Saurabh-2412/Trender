{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { axios } from \"axios\";\n\nconst fetchPost = async () => {\n  return axios.get(\"https://social-media.saurabhsharma11.repl.co/v1/posts\");\n};\n\nexport const loadPosts = createAsyncThunk(\"posts/loadPosts\", async () => {\n  const response = await fetchPost();\n  return response.data;\n});\n/* const initialState = [\r\n    { id: '1', title: 'First Post!', content: 'First Post' },\r\n    { id: '2', title: 'Second Post', content: 'Second Post' }\r\n] */\n\nconst postSlice = createSlice({\n  name: 'posts',\n  initialState: {\n    status: 'idle',\n    error: null,\n    posts: []\n  },\n  reducers: {},\n  extraReducers: {\n    [loadPosts.pending]: state => {\n      state.status = \"loading\";\n    },\n    [loadPosts.fulfilled]: (state, {\n      payload\n    }) => {\n      state.status = \"fulfilled\";\n      state.posts = payload.posts;\n    },\n    [loadPosts.rejected]: (state, action) => {\n      state.status = \"error\";\n      state.error = action.error.message;\n    }\n  }\n});\nexport const {\n  postAdded\n} = postSlice.actions;\nexport default postSlice.reducer;","map":{"version":3,"sources":["E:/NeogCampProjects/LevelOneProjects/Social-Media/social-media-app/src/features/posts/postSlice.js"],"names":["createSlice","createAsyncThunk","axios","fetchPost","get","loadPosts","response","data","postSlice","name","initialState","status","error","posts","reducers","extraReducers","pending","state","fulfilled","payload","rejected","action","message","postAdded","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAqBC,gBAArB,QAA6C,kBAA7C;AACA,SAASC,KAAT,QAAsB,OAAtB;;AAEI,MAAMC,SAAS,GAAG,YAAY;AAC1B,SAAOD,KAAK,CAACE,GAAN,CAAU,uDAAV,CAAP;AACH,CAFD;;AAIA,OAAO,MAAMC,SAAS,GAAGJ,gBAAgB,CAAC,iBAAD,EAAoB,YAAY;AACrE,QAAMK,QAAQ,GAAG,MAAMH,SAAS,EAAhC;AACA,SAAOG,QAAQ,CAACC,IAAhB;AACD,CAHsC,CAAlC;AAKP;AACJ;AACA;AACA;;AAEI,MAAMC,SAAS,GAAGR,WAAW,CAAC;AAC1BS,EAAAA,IAAI,EAAE,OADoB;AAE1BC,EAAAA,YAAY,EAAE;AACVC,IAAAA,MAAM,EAAC,MADG;AAEVC,IAAAA,KAAK,EAAC,IAFI;AAGVC,IAAAA,KAAK,EAAC;AAHI,GAFY;AAO1BC,EAAAA,QAAQ,EAAE,EAPgB;AAQ1BC,EAAAA,aAAa,EAAC;AACV,KAACV,SAAS,CAACW,OAAX,GAAsBC,KAAD,IAAW;AAC5BA,MAAAA,KAAK,CAACN,MAAN,GAAe,SAAf;AACH,KAHS;AAIV,KAACN,SAAS,CAACa,SAAX,GAAuB,CAACD,KAAD,EAAQ;AAAEE,MAAAA;AAAF,KAAR,KAAwB;AAC3CF,MAAAA,KAAK,CAACN,MAAN,GAAe,WAAf;AACAM,MAAAA,KAAK,CAACJ,KAAN,GAAcM,OAAO,CAACN,KAAtB;AACH,KAPS;AAQV,KAACR,SAAS,CAACe,QAAX,GAAsB,CAACH,KAAD,EAAQI,MAAR,KAAmB;AACrCJ,MAAAA,KAAK,CAACN,MAAN,GAAe,OAAf;AACAM,MAAAA,KAAK,CAACL,KAAN,GAAcS,MAAM,CAACT,KAAP,CAAaU,OAA3B;AACH;AAXS;AARY,CAAD,CAA7B;AAuBJ,OAAO,MAAM;AAAEC,EAAAA;AAAF,IAAgBf,SAAS,CAACgB,OAAhC;AACP,eAAehB,SAAS,CAACiB,OAAzB","sourcesContent":["import { createSlice,createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { axios } from \"axios\";\r\n\r\n    const fetchPost = async () => {\r\n        return axios.get(\"https://social-media.saurabhsharma11.repl.co/v1/posts\");\r\n    }\r\n\r\n    export const loadPosts = createAsyncThunk(\"posts/loadPosts\", async () => {\r\n        const response = await fetchPost();\r\n        return response.data;\r\n      });\r\n\r\n    /* const initialState = [\r\n        { id: '1', title: 'First Post!', content: 'First Post' },\r\n        { id: '2', title: 'Second Post', content: 'Second Post' }\r\n    ] */\r\n\r\n    const postSlice = createSlice({\r\n        name: 'posts',\r\n        initialState: {\r\n            status:'idle',\r\n            error:null,\r\n            posts:[]\r\n        },\r\n        reducers: {},\r\n        extraReducers:{\r\n            [loadPosts.pending]: (state) => {\r\n                state.status = \"loading\";\r\n            },\r\n            [loadPosts.fulfilled]: (state, { payload }) => {\r\n                state.status = \"fulfilled\";\r\n                state.posts = payload.posts;\r\n            },\r\n            [loadPosts.rejected]: (state, action) => {\r\n                state.status = \"error\";\r\n                state.error = action.error.message;\r\n            }\r\n        }\r\n    })\r\n\r\nexport const { postAdded } = postSlice.actions;\r\nexport default postSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}