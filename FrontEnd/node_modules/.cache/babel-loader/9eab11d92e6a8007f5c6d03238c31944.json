{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst fetchPosts = async () => {\n  return axios.get(\"https://Social-Media.saurabhsharma11.repl.co/v1/posts\");\n};\n\nexport const loadPosts = createAsyncThunk(\"posts/loadPosts\", async () => {\n  const response = await fetchPosts();\n  return response.data;\n});\nexport function DateSetter() {\n  let current = new Date();\n  let cDate = current.getFullYear() + '-' + (current.getMonth() + 1) + '-' + current.getDate();\n  let cTime = current.getHours() + \":\" + current.getMinutes() + \":\" + current.getSeconds();\n  let dateTime = cDate + ',' + cTime;\n  return dateTime;\n}\n_c = DateSetter;\nexport const createPost = createAsyncThunk(\"post/createPost\", async ({\n  content,\n  image\n}, {\n  fulfillWithValue,\n  rejectWithValue\n}) => {\n  let postData = {\n    userID: \"123456\",\n    desc: content,\n    status: \"A\",\n    likes: [],\n    comments: [],\n    createdDate: DateSetter(),\n    modifiedData: DateSetter()\n  };\n\n  if (image) {\n    const formData = new FormData();\n    const fileName = Date().now + image.name;\n    formData.append(\"image\", image);\n    formData.append(\"name\", fileName);\n\n    try {\n      const {\n        data,\n        status\n      } = await axios.post(\"https://social-media.saurabhsharma11.repl.co/v1/images/upload\", formData);\n\n      if (status === 201) {\n        postData.image = data.url;\n      }\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  try {\n    const {\n      data\n    } = await axios.post(\"https://social-media.saurabhsharma11.repl.co/v1/posts\", postData);\n    return fulfillWithValue(data.post);\n  } catch (error) {\n    return rejectWithValue(error.response);\n  }\n});\nexport const likePost = createAsyncThunk(\"post/likePost\", async (postid, {\n  fulfillWithValue,\n  rejectWithValue\n}) => {\n  try {\n    const {\n      status,\n      data\n    } = await axios.post(`https://Social-Media.saurabhsharma11.repl.co/v1/posts/likeone/${postid}`, {\n      userId: \"951753\"\n    });\n\n    if (status === 201) {\n      return fulfillWithValue(data);\n    }\n  } catch (error) {\n    return rejectWithValue(error);\n  }\n});\nexport const unlikePost = createAsyncThunk(\"post/unlikePost\", async (postid, {\n  fulfillWithValue,\n  rejectWithValue\n}) => {\n  try {\n    const {\n      status,\n      data\n    } = await axios.post(`https://Social-Media.saurabhsharma11.repl.co/v1/posts/unlike/${postid}`, {\n      userId: 654321\n    });\n\n    if (status === 200) {\n      return fulfillWithValue(data);\n    }\n  } catch (error) {\n    return rejectWithValue(error);\n  }\n});\nexport const postComment = createAsyncThunk(\"post/postComment\", async ({\n  postid,\n  comment\n}, {\n  fulfillWithValue,\n  rejectWithValue\n}) => {\n  try {\n    const {\n      status,\n      data\n    } = await axios.post(`https://Social-Media.saurabhsharma11.repl.co/v1/posts/comment/${postid}`, {\n      userId: \"654321\",\n      comment\n    });\n\n    if (status === 201) {\n      return fulfillWithValue(data);\n    }\n  } catch (error) {\n    return rejectWithValue(error);\n  }\n});\nexport const viewPost = createAsyncThunk(\"post/viewPost\", async (postid, {\n  fulfillWithValue,\n  rejectWithValue\n}) => {\n  try {\n    const {\n      status,\n      data\n    } = await axios.get(`https://Social-Media.saurabhsharma11.repl.co/v1/posts/viewpost/${postid}`);\n    console.log(\"get api\", data);\n\n    if (status === 201) {\n      return fulfillWithValue(data);\n    }\n  } catch (error) {\n    return rejectWithValue(error);\n  }\n});\nexport const postSlice = createSlice({\n  name: \"posts\",\n  initialState: {\n    status: \"idle\",\n    error: null,\n    posts: [],\n    singlePost: \"\"\n  },\n  reducers: {},\n  extraReducers: {\n    [createPost.fulfilled]: (state, action) => {\n      state.posts.push(action.payload);\n      console.log(\"reducer\", action.payload.post);\n    },\n    [loadPosts.pending]: state => {\n      state.status = \"loading\";\n    },\n    [loadPosts.fulfilled]: (state, {\n      payload\n    }) => {\n      state.status = \"fulfilled\";\n      state.posts = payload.posts;\n    },\n    [loadPosts.rejected]: (state, action) => {\n      state.status = \"error\";\n      state.error = action.error.message;\n    },\n    [likePost.pending]: state => {\n      state.status = \"pending\";\n    },\n    [likePost.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      const existingPost = state.posts.findIndex(post => post._id === action.payload._id);\n      state.posts.splice(existingPost, 1, action.payload);\n    },\n    [likePost.rejected]: (state, action) => {\n      state.status = \"failed\";\n      state.error = action.error.message;\n    },\n    [unlikePost.pending]: state => {\n      state.status = \"pending\";\n    },\n    [unlikePost.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      const existingPost = state.posts.findIndex(post => post._id === action.payload._id);\n      state.posts.splice(existingPost, 1, action.payload);\n    },\n    [unlikePost.rejected]: (state, action) => {\n      state.status = \"failed\";\n      state.error = action.error.message;\n    },\n    [postComment.fulfilled]: (state, action) => {\n      state.singlePost = action.payload;\n    },\n    [viewPost.fulfilled]: (state, action) => {\n      state.singlePost = action.payload;\n    }\n  }\n});\nexport const {\n  LikeClicked,\n  DisLikeClicked\n} = postSlice.actions;\nexport default postSlice.reducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DateSetter\");","map":{"version":3,"sources":["E:/NeogCampProjects/LevelOneProjects/Social-Media/social-media-app/src/features/posts/postSlice.js"],"names":["createAsyncThunk","createSlice","axios","fetchPosts","get","loadPosts","response","data","DateSetter","current","Date","cDate","getFullYear","getMonth","getDate","cTime","getHours","getMinutes","getSeconds","dateTime","createPost","content","image","fulfillWithValue","rejectWithValue","postData","userID","desc","status","likes","comments","createdDate","modifiedData","formData","FormData","fileName","now","name","append","post","url","err","console","log","message","error","likePost","postid","userId","unlikePost","postComment","comment","viewPost","postSlice","initialState","posts","singlePost","reducers","extraReducers","fulfilled","state","action","push","payload","pending","rejected","existingPost","findIndex","_id","splice","LikeClicked","DisLikeClicked","actions","reducer"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst fetchPosts = async () => {\r\n    return axios.get(\"https://Social-Media.saurabhsharma11.repl.co/v1/posts\");\r\n};\r\n\r\nexport const loadPosts = createAsyncThunk(\"posts/loadPosts\", async () => {\r\n    const response = await fetchPosts();\r\n    return response.data;\r\n});\r\n\r\nexport function DateSetter(){\r\n    let current = new Date();\r\n    let cDate = current.getFullYear() + '-' + (current.getMonth() + 1) + '-' + current.getDate();\r\n    let cTime = current.getHours() + \":\" + current.getMinutes() + \":\" + current.getSeconds();\r\n    let dateTime = cDate + ',' + cTime;\r\n    return dateTime;\r\n}\r\n\r\nexport const createPost = createAsyncThunk(\"post/createPost\",\r\n    async ({ content,image }, { fulfillWithValue, rejectWithValue }) => {\r\n        let postData = {\r\n            userID: \"123456\",\r\n            desc: content,\r\n            status: \"A\",\r\n            likes: [],\r\n            comments: [],\r\n            createdDate: DateSetter(),\r\n            modifiedData: DateSetter()\r\n        };\r\n\r\n        if (image) {\r\n            const formData = new FormData();\r\n            const fileName = Date().now + image.name;\r\n            formData.append(\"image\", image);\r\n            formData.append(\"name\", fileName);\r\n            try {\r\n                const { data, status } = await axios.post(\r\n                    \"https://social-media.saurabhsharma11.repl.co/v1/images/upload\",\r\n                    formData\r\n                );\r\n                if (status === 201) {\r\n                    postData.image = data.url;\r\n                }\r\n            } catch (err) {\r\n                console.log(err.message);\r\n            }\r\n        }\r\n\r\n        try {\r\n            const { data } = await axios.post(\r\n            \"https://social-media.saurabhsharma11.repl.co/v1/posts\",\r\n                postData\r\n            );\r\n            return fulfillWithValue(data.post);\r\n        } catch (error) {\r\n            return rejectWithValue(error.response);\r\n        }\r\n    }\r\n);\r\n\r\nexport const likePost = createAsyncThunk(\"post/likePost\", \r\n    async (postid, { fulfillWithValue, rejectWithValue }) => {\r\n      try {\r\n        const { status, data } = await axios.post(\r\n          `https://Social-Media.saurabhsharma11.repl.co/v1/posts/likeone/${postid}`,{userId:\"951753\"}\r\n        );\r\n        if (status === 201) {\r\n          return fulfillWithValue(data);\r\n        }\r\n      } catch (error) {\r\n        return rejectWithValue(error);\r\n      }\r\n    }\r\n);\r\n\r\nexport const unlikePost = createAsyncThunk(\r\n    \"post/unlikePost\",\r\n    async (postid, { fulfillWithValue, rejectWithValue }) => {\r\n      try {\r\n        const { status, data } = await axios.post(\r\n          `https://Social-Media.saurabhsharma11.repl.co/v1/posts/unlike/${postid}`,{userId:654321}\r\n        );\r\n        if (status === 200) {\r\n          return fulfillWithValue(data);\r\n        }\r\n      } catch (error) {\r\n        return rejectWithValue(error);\r\n      }\r\n    }\r\n);\r\n\r\nexport const postComment = createAsyncThunk(\r\n    \"post/postComment\",\r\n    async ({ postid, comment }, { fulfillWithValue, rejectWithValue }) => {\r\n      try {\r\n        const { status, data } = await axios.post(\r\n          `https://Social-Media.saurabhsharma11.repl.co/v1/posts/comment/${postid}`,\r\n          { userId:\"654321\", comment }\r\n        );\r\n        if (status === 201) {\r\n          return fulfillWithValue(data);\r\n        }\r\n      } catch (error) {\r\n        return rejectWithValue(error);\r\n      }\r\n    }\r\n);\r\n\r\nexport const viewPost = createAsyncThunk(\"post/viewPost\", \r\n    async (postid, { fulfillWithValue, rejectWithValue }) => {\r\n      try {\r\n        const { status, data } = await axios.get(\r\n          `https://Social-Media.saurabhsharma11.repl.co/v1/posts/viewpost/${postid}`\r\n        );\r\n        console.log(\"get api\",data);\r\n        if (status === 201) {\r\n          return fulfillWithValue(data);\r\n        }\r\n      } catch (error) {\r\n        return rejectWithValue(error);\r\n      }\r\n    }\r\n);\r\n\r\nexport const postSlice = createSlice({\r\n    name: \"posts\",\r\n    initialState: {\r\n        status: \"idle\",\r\n        error: null,\r\n        posts: [],\r\n        singlePost: \"\",\r\n    },\r\n    reducers: {},\r\n    extraReducers: {\r\n        [createPost.fulfilled]: (state, action) => {\r\n            state.posts.push(action.payload);\r\n            console.log(\"reducer\", action.payload.post);\r\n        },\r\n        [loadPosts.pending]: (state) => {\r\n            state.status = \"loading\";\r\n        },\r\n        [loadPosts.fulfilled]: (state, { payload }) => {\r\n            state.status = \"fulfilled\";\r\n            state.posts = payload.posts;\r\n        },\r\n        [loadPosts.rejected]: (state, action) => {\r\n            state.status = \"error\";\r\n            state.error = action.error.message;\r\n        },\r\n        [likePost.pending]: (state) => {\r\n            state.status = \"pending\";\r\n        },\r\n        [likePost.fulfilled]: (state, action) => {\r\n            state.status = \"success\";\r\n            const existingPost = state.posts.findIndex(\r\n            (post) => post._id === action.payload._id\r\n            );\r\n            state.posts.splice(existingPost, 1, action.payload);\r\n        },\r\n        [likePost.rejected]: (state, action) => {\r\n            state.status = \"failed\";\r\n            state.error = action.error.message;\r\n        },\r\n        [unlikePost.pending]: (state) => {\r\n          state.status = \"pending\";\r\n        },\r\n        [unlikePost.fulfilled]: (state, action) => {\r\n          state.status = \"success\";\r\n          const existingPost = state.posts.findIndex(\r\n            (post) => post._id === action.payload._id\r\n          );\r\n          state.posts.splice(existingPost, 1, action.payload);\r\n        },\r\n        [unlikePost.rejected]: (state, action) => {\r\n          state.status = \"failed\";\r\n          state.error = action.error.message;\r\n        },\r\n        [postComment.fulfilled]: (state, action) => {\r\n            state.singlePost = action.payload;\r\n        },\r\n        [viewPost.fulfilled]: (state, action) => {\r\n            state.singlePost = action.payload;\r\n        },\r\n    }\r\n});\r\n\r\nexport const { LikeClicked, DisLikeClicked } = postSlice.actions;\r\nexport default postSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}