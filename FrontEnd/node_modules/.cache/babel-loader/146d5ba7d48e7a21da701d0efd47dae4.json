{"ast":null,"code":"var _jsxFileName = \"E:\\\\NeogCampProjects\\\\LevelOneProjects\\\\Social-Media\\\\social-media-app\\\\src\\\\features\\\\posts\\\\CommentButton.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { postComment } from \"./postSlice\";\nimport { getLocalStorage } from \"../authentication/Storage\"; //fetching single comment\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CommentListner({\n  post\n}) {\n  const {\n    userdata\n  } = getLocalStorage(); //console.log(\"userdata\",userdata);\n  //const postedComments = post.comments;\n  //console.log(\"postedComments\",postedComments);\n\n  let postComments = post.comments.map(postedElement => postedElement.userid === userdata.userid);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: postComments && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"gray\"\n      },\n      children: postComments.comment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 31\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n_c = CommentListner;\nexport function CommentOnPost({\n  post\n}) {\n  _s();\n\n  const [textBox, textBoxSetter] = useState(\"none\");\n  const [comment, setComment] = useState(\"\");\n  const dispatch = useDispatch();\n  const [pending, setPending] = useState(\"idle\");\n\n  function textBoxToggle() {\n    if (textBox === \"none\") {\n      textBoxSetter(\"block\");\n    } else {\n      textBoxSetter(\"none\");\n    }\n  }\n\n  function handleOnclickHandler(post) {\n    dispatch(postComment({\n      postid: post._id,\n      comment\n    }));\n    textBoxSetter(\"none\");\n    setComment(\"\");\n  }\n\n  ;\n\n  function CommentBox() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center flex-col my-2\",\n        style: {\n          display: `${textBox}`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          autoFocus: true,\n          className: \"resize-auto rounded bg-gray-100 ring\",\n          placeholder: \"Would you like to make a comment?\",\n          value: comment,\n          onChange: e => setComment(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inline items-center mt-2 ml-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"comment-buttons mr-2 bg-gray-200 w-20 p-1 ring\",\n            onClick: () => textBoxToggle(),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"comment-buttons mr-2 bg-blue-900 w-20 p-1 ring\",\n            onClick: () => handleOnclickHandler(post),\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => textBoxToggle(post),\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"material-icons\",\n        children: \"\\uE0B9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 57\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CommentBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CommentListner, {\n      post: post\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CommentOnPost, \"c+Up681J8WpJru2r0leSvFcGqak=\", false, function () {\n  return [useDispatch];\n});\n\n_c2 = CommentOnPost;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CommentListner\");\n$RefreshReg$(_c2, \"CommentOnPost\");","map":{"version":3,"sources":["E:/NeogCampProjects/LevelOneProjects/Social-Media/social-media-app/src/features/posts/CommentButton.js"],"names":["React","useState","useSelector","useDispatch","postComment","getLocalStorage","CommentListner","post","userdata","postComments","comments","map","postedElement","userid","color","comment","CommentOnPost","textBox","textBoxSetter","setComment","dispatch","pending","setPending","textBoxToggle","handleOnclickHandler","postid","_id","CommentBox","display","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { postComment } from \"./postSlice\";\r\nimport { getLocalStorage } from \"../authentication/Storage\";\r\n\r\n//fetching single comment\r\nexport function CommentListner({ post }){\r\n    const { userdata } = getLocalStorage();\r\n    //console.log(\"userdata\",userdata);\r\n    //const postedComments = post.comments;\r\n    //console.log(\"postedComments\",postedComments);\r\n    let postComments = post.comments.map((postedElement) => postedElement.userid === userdata.userid);\r\n\r\n    return (\r\n        <div>\r\n            { postComments && <p style={{color:\"gray\"}}>{postComments.comment}</p> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function CommentOnPost({ post }){\r\n    const [ textBox, textBoxSetter ] = useState(\"none\");\r\n    const [comment, setComment] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n    const [pending, setPending] = useState(\"idle\");\r\n    \r\n    function textBoxToggle(){\r\n        if(textBox === \"none\"){\r\n            textBoxSetter(\"block\");\r\n        } else {\r\n            textBoxSetter(\"none\");\r\n        }\r\n    }\r\n\r\n    function handleOnclickHandler (post) {\r\n        dispatch(postComment({ postid: post._id, comment }));\r\n        textBoxSetter(\"none\");\r\n        setComment(\"\");\r\n    };\r\n\r\n    function CommentBox(){\r\n        return(\r\n            <div>\r\n                <div className=\"flex items-center flex-col my-2\" style={{ display:`${textBox}` }}>\r\n                    <textarea\r\n                    autoFocus={true}\r\n                    className=\"resize-auto rounded bg-gray-100 ring\"\r\n                    placeholder=\"Would you like to make a comment?\"\r\n                    value={comment}\r\n                    onChange={(e) => setComment(e.target.value)}\r\n                    >\r\n                    </textarea><br/>\r\n                    <div className=\"inline items-center mt-2 ml-12\">\r\n                        <button\r\n                            className=\"comment-buttons mr-2 bg-gray-200 w-20 p-1 ring\"\r\n                            onClick={() => textBoxToggle()}\r\n                        >Cancel</button>\r\n                        <button\r\n                            className=\"comment-buttons mr-2 bg-blue-900 w-20 p-1 ring\"\r\n                            onClick={() => handleOnclickHandler(post)}\r\n                        >Save</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={() => textBoxToggle(post)}><i class=\"material-icons\">&#xe0b9;</i></button>\r\n            <CommentBox/>\r\n            <CommentListner post={post}/>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}