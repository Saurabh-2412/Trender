{"ast":null,"code":"var _jsxFileName = \"E:\\\\NeogCampProjects\\\\LevelOneProjects\\\\Social-Media\\\\social-media-app\\\\src\\\\features\\\\posts\\\\postInputForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { postAdded } from './postSlice';\nimport { PostList } from \"./postList\";\nimport { createPost } from \"./postSlice\";\nimport { unwrapResult } from \"@reduxjs/toolkit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function NewPost() {\n  _s();\n\n  const dispatch = useDispatch();\n  const [content, setContent] = useState('');\n  const [status, setState] = useState(\"idle\");\n  const [image, setImage] = useState(\"\");\n\n  const onContentChanged = e => setContent(e.target.value);\n\n  const onSavePostClicked = async () => {\n    try {\n      setState(\"pending\");\n      const result = await dispatch(createPost({\n        content,\n        image\n      }));\n      unwrapResult(result);\n      setContent(\"\");\n      setImage(\"\");\n      setState(\"success\");\n    } catch (error) {\n      console.log(error);\n      setState(\"idle\");\n    }\n  };\n  /**\r\n  const onSavePostClicked = () => {\r\n      if (content) {\r\n        dispatch(\r\n          postAdded({\r\n              postID: \"p1206\",\r\n              caption: content,\r\n              likes: 100,\r\n              user: {\r\n                userID: \"u1236\",\r\n                name: \"saurabh\"\r\n              }\r\n          })\r\n        )\r\n        setContent('')\r\n      }\r\n  }\r\n  */\n\n\n  const addImage = event => {\n    setImage(event.target.files[0]);\n    event.target.value = \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"New Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"postContent\",\n          name: \"postContent\",\n          value: content,\n          onChange: onContentChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: onSavePostClicked,\n          children: \"Save Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file\",\n          className: \"flex cursor-pointer items-center rounded p-2 ml-14 font-medium hover:bg-gray-100\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-700\",\n            children: \"Add Photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"file\",\n            id: \"file\",\n            accept: \"image/png, image/jpeg\",\n            className: \"hidden\",\n            value: image,\n            onChange: addImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PostList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 7\n  }, this);\n}\n\n_s(NewPost, \"ZuyWKzJYVaBswYgIg+2EhSlKwGo=\", false, function () {\n  return [useDispatch];\n});\n\n_c = NewPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPost\");","map":{"version":3,"sources":["E:/NeogCampProjects/LevelOneProjects/Social-Media/social-media-app/src/features/posts/postInputForm.js"],"names":["React","useState","useDispatch","postAdded","PostList","createPost","unwrapResult","NewPost","dispatch","content","setContent","status","setState","image","setImage","onContentChanged","e","target","value","onSavePostClicked","result","error","console","log","addImage","event","files"],"mappings":"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","sourcesContent":["import React,{ useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { postAdded } from './postSlice';\r\nimport { PostList } from \"./postList\";\r\nimport { createPost } from \"./postSlice\";\r\nimport { unwrapResult } from \"@reduxjs/toolkit\";\r\n\r\nexport function NewPost(){\r\n  const dispatch = useDispatch();\r\n  const [ content, setContent ] = useState('');\r\n  const [ status, setState ] = useState(\"idle\");\r\n  const [ image, setImage ] = useState(\"\");\r\n  const onContentChanged = e => setContent(e.target.value);\r\n\r\n\r\n    const onSavePostClicked = async () => {\r\n      try {\r\n        setState(\"pending\");\r\n        const result = await dispatch(createPost({ content,image }));\r\n        unwrapResult(result);\r\n        setContent(\"\");\r\n        setImage(\"\");\r\n        setState(\"success\");\r\n      } catch (error) {\r\n        console.log(error);\r\n        setState(\"idle\");\r\n      }\r\n    };\r\n\r\n    /**\r\n    const onSavePostClicked = () => {\r\n        if (content) {\r\n          dispatch(\r\n            postAdded({\r\n                postID: \"p1206\",\r\n                caption: content,\r\n                likes: 100,\r\n                user: {\r\n                  userID: \"u1236\",\r\n                  name: \"saurabh\"\r\n                }\r\n            })\r\n          )\r\n          setContent('')\r\n        }\r\n    }\r\n    */\r\n\r\n    const addImage = (event) => {\r\n      setImage(event.target.files[0]);\r\n      event.target.value = \"\";\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <form>\r\n        <h1>New Post</h1>\r\n          <div className=\"flex items-center\">\r\n            <textarea\r\n                id=\"postContent\"\r\n                name=\"postContent\"\r\n                value={content}\r\n                onChange={onContentChanged}\r\n            />\r\n            <button type=\"button\" onClick={onSavePostClicked}>Save Post</button>\r\n\r\n            <label\r\n              htmlFor=\"file\"\r\n              className=\"flex cursor-pointer items-center rounded p-2 ml-14 font-medium hover:bg-gray-100\">\r\n              <span className=\"text-gray-700\">Add Photo</span>\r\n              <input\r\n                type=\"file\"\r\n                name=\"file\"\r\n                id=\"file\"\r\n                accept=\"image/png, image/jpeg\"\r\n                className=\"hidden\"\r\n                value={image}\r\n                onChange={addImage}\r\n              />\r\n            </label>\r\n\r\n          </div>\r\n        </form>\r\n        <PostList/>\r\n      </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}