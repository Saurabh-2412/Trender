{"ast":null,"code":"var _jsxFileName = \"E:\\\\NeogCampProjects\\\\LevelOneProjects\\\\Social-Media\\\\social-media-app\\\\src\\\\features\\\\posts\\\\ViewPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { unwrapResult } from \"@reduxjs/toolkit\";\nimport { viewPost } from \"./postSlice\";\nimport { Link, useParams, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ViewPost() {\n  _s();\n\n  const dispatch = useDispatch();\n  const [pending, setPending] = useState(\"idle\");\n  const {\n    postid\n  } = useParams();\n  console.log(postid);\n  const post = useSelector(state => state.posts.singlePost);\n  console.log(\"viewpost\", post);\n  useEffect(() => {\n    (async () => {\n      try {\n        setPending(\"pending\");\n        const resultAction = await dispatch(viewPost(postid));\n        unwrapResult(resultAction);\n        setPending(\"success\");\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }, [dispatch, postid]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"hello this is view post page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ViewPost, \"wXhd/eecRgvQayjVD+FUrRPZJHc=\", false, function () {\n  return [useDispatch, useParams, useSelector];\n});\n\n_c = ViewPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewPost\");","map":{"version":3,"sources":["E:/NeogCampProjects/LevelOneProjects/Social-Media/social-media-app/src/features/posts/ViewPost.js"],"names":["React","useEffect","useState","useSelector","useDispatch","unwrapResult","viewPost","Link","useParams","useLocation","ViewPost","dispatch","pending","setPending","postid","console","log","post","state","posts","singlePost","resultAction","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,WAA1B,QAA6C,kBAA7C;;AAEA,OAAO,SAASC,QAAT,GAAoB;AAAA;;AACvB,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,MAAD,CAAtC;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAaN,SAAS,EAA5B;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,QAAMG,IAAI,GAAGd,WAAW,CAAEe,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,UAAxB,CAAxB;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBC,IAAvB;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACV,KAAC,YAAY;AACX,UAAI;AACFY,QAAAA,UAAU,CAAC,SAAD,CAAV;AACA,cAAMQ,YAAY,GAAG,MAAMV,QAAQ,CAACL,QAAQ,CAACQ,MAAD,CAAT,CAAnC;AACAT,QAAAA,YAAY,CAACgB,YAAD,CAAZ;AACAR,QAAAA,UAAU,CAAC,SAAD,CAAV;AACD,OALD,CAKE,OAAOS,KAAP,EAAc;AACdP,QAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACD;AACF,KATD;AAUH,GAXM,EAWJ,CAACX,QAAD,EAAWG,MAAX,CAXI,CAAT;AAaA,sBACI;AAAA,2BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA1BeJ,Q;UACKN,W,EAEEI,S,EAENL,W;;;KALDO,Q","sourcesContent":["import React,{useEffect,useState} from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { unwrapResult } from \"@reduxjs/toolkit\";\r\nimport { viewPost } from \"./postSlice\";\r\nimport { Link, useParams, useLocation } from \"react-router-dom\";\r\n\r\nexport function ViewPost() {\r\n    const dispatch = useDispatch();\r\n    const [pending, setPending] = useState(\"idle\");\r\n    const { postid } = useParams();\r\n    console.log(postid);\r\n    const post = useSelector((state) => state.posts.singlePost);\r\n    console.log(\"viewpost\",post);\r\n    \r\n    useEffect(() => {\r\n          (async () => {\r\n            try {\r\n              setPending(\"pending\");\r\n              const resultAction = await dispatch(viewPost(postid));\r\n              unwrapResult(resultAction);\r\n              setPending(\"success\");\r\n            } catch (error) {\r\n              console.log(error);\r\n            }\r\n          })();\r\n      }, [dispatch, postid] );\r\n\r\n    return (\r\n        <div>\r\n            <p>hello this is view post page</p>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}