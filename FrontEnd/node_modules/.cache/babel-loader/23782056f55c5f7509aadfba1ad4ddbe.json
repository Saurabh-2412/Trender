{"ast":null,"code":"var _jsxFileName = \"E:\\\\NeogCampProjects\\\\LevelOneProjects\\\\Social-Media\\\\social-media-app\\\\src\\\\features\\\\posts\\\\PostList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Navigate, NavLink } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { unwrapResult } from \"@reduxjs/toolkit\";\nimport { loadPosts } from \"./postSlice\";\nimport { NewPost } from \"./NewPost\";\nimport { PostBody } from \"./PostBody\";\nimport { LikeButton } from \"./LikeButton\";\nimport { CommentOnPost } from \"./CommentButton\";\nimport { ViewPost } from \"./ViewPost\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function PostList() {\n  _s();\n\n  {\n    /**\r\n       const { status, posts, error } = useSelector((state) => state.posts);\r\n    const dispatch = useDispatch();\r\n    //const posts = useSelector((state) => { return state.posts});\r\n     useEffect(() => {\r\n       (async () => {\r\n       if (status === \"idle\") {\r\n           dispatch(loadPosts());\r\n       }\r\n       })();\r\n    }, [status, dispatch]);\r\n    \n    return (\r\n       <div>\r\n           <div>\r\n               {posts.map((post) => (\r\n                   <article\r\n                       key={post._id}\r\n                       style={{\r\n                       border: \"2px solid black\",\r\n                       padding: \"15px\",\r\n                       margin: \"5px\"\r\n                       }}\r\n                       className=\"post\"\r\n                   >\r\n                       <NavLink className=\"NavLink\" to={`./viewpost/${post._id}`}>\r\n                           {post.image && <img src={post.image} alt=\"\"/>}\r\n                       </NavLink>\r\n                       <LikeButton post={post}/>\r\n                       <CommentOnPost post={post}/>\r\n                       <NavLink className=\"NavLink\" to={`./viewpost/${post._id}`}>\r\n                           ViewPost\r\n                       </NavLink>\r\n                       commented=><button onClick={() => ViewPostClickHandler(post._id)}>ViewPost</button> \r\n                       </article>\r\n                       ))}\r\n                   </div>\r\n               </div>\r\n           );\r\n    */\n  }\n  const [status, setStatus] = useState(\"idle\");\n  const posts = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    (async () => {\n      try {\n        setStatus(\"pending\");\n        const result = await dispatch(loadPosts());\n        unwrapResult(result);\n        setStatus(\"success\");\n      } catch (error) {\n        console.log(error);\n        setStatus(\"idle\");\n      }\n    })();\n  }, [dispatch]);\n  let renderContent;\n  renderContent = posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"p-2\",\n      children: \"No posts found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this) : React.Children.toArray(posts === null || posts === void 0 ? void 0 : posts.map(post => /*#__PURE__*/_jsxDEV(PostBody, {\n    post: post\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 34\n  }, this)));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center flex-col mt-3 mb-5\",\n    children: [/*#__PURE__*/_jsxDEV(NewPost, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), status === \"pending\" && \"Loading...\", status === \"success\" && renderContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PostList, \"9FYlHBwW39tvmqGv+LVUFLhs5EA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = PostList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"sources":["E:/NeogCampProjects/LevelOneProjects/Social-Media/social-media-app/src/features/posts/PostList.js"],"names":["React","useEffect","useState","Navigate","NavLink","useSelector","useDispatch","unwrapResult","loadPosts","NewPost","PostBody","LikeButton","CommentOnPost","ViewPost","PostList","status","setStatus","posts","state","post","dispatch","result","error","console","log","renderContent","length","Children","toArray","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,kBAAlC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,QAAT,QAAyB,YAAzB;;AAEA,OAAO,SAASC,QAAT,GAAoB;AAAA;;AACvB;AAAC;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AAEH,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,MAAD,CAApC;AACA,QAAMe,KAAK,GAAGZ,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAzB;AACA,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY;AACT,UAAI;AACJe,QAAAA,SAAS,CAAC,SAAD,CAAT;AACA,cAAMK,MAAM,GAAG,MAAMD,QAAQ,CAACZ,SAAS,EAAV,CAA7B;AACAD,QAAAA,YAAY,CAACc,MAAD,CAAZ;AACAL,QAAAA,SAAS,CAAC,SAAD,CAAT;AACC,OALD,CAKE,OAAOM,KAAP,EAAc;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAN,QAAAA,SAAS,CAAC,MAAD,CAAT;AACC;AACJ,KAVD;AAWH,GAZQ,EAYN,CAACI,QAAD,CAZM,CAAT;AAcA,MAAIK,aAAJ;AAEAA,EAAAA,aAAa,GACTR,KAAK,CAACS,MAAN,KAAiB,CAAjB,gBACA;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,2BACI;AAAG,MAAA,SAAS,EAAC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADA,GAKA1B,KAAK,CAAC2B,QAAN,CAAeC,OAAf,CACIX,KADJ,aACIA,KADJ,uBACIA,KAAK,CAAEY,GAAP,CAAYV,IAAD,iBAAU,QAAC,QAAD;AAAU,IAAA,IAAI,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,UAArB,CADJ,CANJ;AAWA,sBACI;AAAK,IAAA,SAAS,EAAC,sCAAf;AAAA,4BACA,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADA,EAECJ,MAAM,KAAK,SAAX,IAAwB,YAFzB,EAGCA,MAAM,KAAK,SAAX,IAAwBU,aAHzB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAjFeX,Q;UA4CET,W,EACGC,W;;;KA7CLQ,Q","sourcesContent":["import React, { useEffect,useState } from \"react\";\r\nimport { Navigate, NavLink } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { unwrapResult } from \"@reduxjs/toolkit\";\r\nimport { loadPosts } from \"./postSlice\";\r\nimport { NewPost } from \"./NewPost\";\r\nimport { PostBody } from \"./PostBody\";\r\nimport { LikeButton } from \"./LikeButton\";\r\nimport { CommentOnPost } from \"./CommentButton\";\r\nimport { ViewPost } from \"./ViewPost\";\r\n\r\nexport function PostList() {\r\n    {/**\r\n        const { status, posts, error } = useSelector((state) => state.posts);\r\n    const dispatch = useDispatch();\r\n    //const posts = useSelector((state) => { return state.posts});\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n        if (status === \"idle\") {\r\n            dispatch(loadPosts());\r\n        }\r\n        })();\r\n    }, [status, dispatch]);\r\n    \r\n    return (\r\n        <div>\r\n            <div>\r\n                {posts.map((post) => (\r\n                    <article\r\n                        key={post._id}\r\n                        style={{\r\n                        border: \"2px solid black\",\r\n                        padding: \"15px\",\r\n                        margin: \"5px\"\r\n                        }}\r\n                        className=\"post\"\r\n                    >\r\n                        <NavLink className=\"NavLink\" to={`./viewpost/${post._id}`}>\r\n                            {post.image && <img src={post.image} alt=\"\"/>}\r\n                        </NavLink>\r\n                        <LikeButton post={post}/>\r\n                        <CommentOnPost post={post}/>\r\n                        <NavLink className=\"NavLink\" to={`./viewpost/${post._id}`}>\r\n                            ViewPost\r\n                        </NavLink>\r\n                        commented=><button onClick={() => ViewPostClickHandler(post._id)}>ViewPost</button> \r\n                        </article>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            );\r\n    */}\r\n\r\n    const [status, setStatus] = useState(\"idle\");\r\n    const posts = useSelector((state) => state.post);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n            setStatus(\"pending\");\r\n            const result = await dispatch(loadPosts());\r\n            unwrapResult(result);\r\n            setStatus(\"success\");\r\n            } catch (error) {\r\n            console.log(error);\r\n            setStatus(\"idle\");\r\n            }\r\n        })();\r\n    }, [dispatch]);\r\n\r\n    let renderContent;\r\n\r\n    renderContent =\r\n        posts.length === 0 ? (\r\n        <div className=\"text-center\">\r\n            <p className=\"p-2\">No posts found</p>\r\n        </div>\r\n        ) : (\r\n        React.Children.toArray(\r\n            posts?.map((post) => <PostBody post={post} />)\r\n        )\r\n        );\r\n\r\n    return (\r\n        <div className=\"flex items-center flex-col mt-3 mb-5\">\r\n        <NewPost />\r\n        {status === \"pending\" && \"Loading...\"}\r\n        {status === \"success\" && renderContent}\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}