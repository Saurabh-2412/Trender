{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const loadPosts = createAsyncThunk(\"posts/loadPosts\", async () => {\n  const {\n    data\n  } = await axios.get(\"https://Social-Media.saurabhsharma11.repl.co/v1/posts\"); //console.log(data);\n\n  return data;\n});\nexport function DateSetter() {\n  let current = new Date();\n  let cDate = current.getFullYear() + '-' + (current.getMonth() + 1) + '-' + current.getDate();\n  let cTime = current.getHours() + \":\" + current.getMinutes() + \":\" + current.getSeconds();\n  let dateTime = cDate + ',' + cTime;\n  return dateTime;\n}\n_c = DateSetter;\nexport const createPost = createAsyncThunk(\"post/createPost\", async ({\n  content,\n  image\n}, {\n  fulfillWithValue,\n  rejectWithValue\n}) => {\n  let postData = {\n    desc: content,\n    status: \"A\",\n    likes: [],\n    comments: [],\n    createdAt: DateSetter(),\n    modifiedAt: DateSetter()\n  };\n\n  if (image) {\n    const formData = new FormData();\n    const fileName = Date().now + image.name;\n    formData.append(\"image\", image);\n    formData.append(\"name\", fileName);\n\n    try {\n      const {\n        data,\n        status\n      } = await axios.post(\"https://social-media.saurabhsharma11.repl.co/v1/images/upload\", formData);\n\n      if (status === 201) {\n        postData.image = data.url;\n      }\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  try {\n    const {\n      data\n    } = await axios.post(\"https://social-media.saurabhsharma11.repl.co/v1/posts\", postData);\n    return fulfillWithValue(data.post);\n  } catch (error) {\n    return rejectWithValue(error.response);\n  }\n});\nexport const likePost = createAsyncThunk(\"post/likePost\", async (postId, {\n  fulfillWithValue,\n  rejectWithValue\n}) => {\n  try {\n    const {\n      status,\n      data\n    } = await axios.post(`https://Social-Media.saurabhsharma11.repl.co/v1/posts/likepost/${postId}`);\n    console.log(status, data);\n\n    if (status === 201) {\n      return fulfillWithValue(data);\n    }\n  } catch (error) {\n    return rejectWithValue(error);\n  }\n});\nexport const unlikePost = createAsyncThunk(\"post/unlikePost\", async (postId, {\n  fulfillWithValue,\n  rejectWithValue\n}) => {\n  try {\n    const {\n      status,\n      data\n    } = await axios.post(`https://Social-Media.saurabhsharma11.repl.co/v1/posts/unlikepost/${postId}`);\n\n    if (status === 200) {\n      return fulfillWithValue(data);\n    }\n  } catch (error) {\n    return rejectWithValue(error);\n  }\n});\nexport const postComment = createAsyncThunk(\"post/postComment\", async ({\n  postid,\n  comment\n}, {\n  fulfillWithValue,\n  rejectWithValue\n}) => {\n  try {\n    const {\n      status,\n      data\n    } = await axios.post(`https://Social-Media.saurabhsharma11.repl.co/v1/posts/comment/${postid}`, {\n      comment\n    });\n\n    if (status === 201) {\n      return fulfillWithValue(data);\n    }\n  } catch (error) {\n    return rejectWithValue(error);\n  }\n});\nexport const dropComment = createAsyncThunk(\"post/unComment\", async ({\n  postid\n}, {\n  fulfillWithValue,\n  rejectWithValue\n}) => {\n  console.log(postid);\n\n  try {\n    const {\n      status,\n      data\n    } = await axios.post(`https://Social-Media.saurabhsharma11.repl.co/v1/posts/uncomment/${postid}`);\n\n    if (status === 201) {\n      return fulfillWithValue(data);\n    }\n  } catch (error) {\n    return rejectWithValue(error);\n  }\n});\nexport const viewPost = createAsyncThunk(\"post/viewPost\", async (postid, {\n  fulfillWithValue,\n  rejectWithValue\n}) => {\n  try {\n    //console.log(\"slice\",postid);\n    const {\n      status,\n      data\n    } = await axios.get(`https://Social-Media.saurabhsharma11.repl.co/v1/posts/viewpost/${postid}`); //console.log(\"api\",data);\n\n    if (status === 200) {\n      return fulfillWithValue(data.posts);\n    }\n  } catch (error) {\n    return rejectWithValue(error);\n  }\n});\nexport const getUserPost = createAsyncThunk(\"post/getUserPost\", async userid => {\n  const response = await axios.get(`https://Social-Media.saurabhsharma11.repl.co/v1/posts/${userid}/allposts`); //console.log(\"getUserPost\",response);\n\n  return response.data;\n});\nexport const getAllLikedPost = createAsyncThunk(\"post/getAllLikedPost\", async userid => {\n  const response = await axios.get(`https://Social-Media.saurabhsharma11.repl.co/v1/posts/${userid}/likedposts`);\n  return response.data;\n});\nexport const postSlice = createSlice({\n  name: \"posts\",\n  initialState: {\n    status: \"idle\",\n    error: null,\n    posts: [],\n    singlePost: \"\"\n  },\n  reducers: {},\n  extraReducers: {\n    [createPost.fulfilled]: (state, action) => {\n      state.posts.push(action.payload); //console.log(\"reducer\", action.payload.post);\n    },\n    [loadPosts.pending]: state => {\n      state.status = \"loading\";\n    },\n    [loadPosts.fulfilled]: (state, {\n      payload\n    }) => {\n      state.status = \"fulfilled\";\n      state.posts = payload.posts;\n    },\n    [loadPosts.rejected]: (state, action) => {\n      state.status = \"error\";\n      state.error = action.error.message;\n    },\n    [likePost.pending]: state => {\n      state.status = \"pending\";\n    },\n    [likePost.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      const existingPost = state.posts.findIndex(post => post._id === action.payload._id);\n      state.posts.splice(existingPost, 1, action.payload);\n    },\n    [likePost.rejected]: (state, action) => {\n      state.status = \"failed\";\n      state.error = action.error.message;\n    },\n    [unlikePost.pending]: state => {\n      state.status = \"pending\";\n    },\n    [unlikePost.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      const existingPost = state.posts.findIndex(post => post._id === action.payload._id);\n      state.posts.splice(existingPost, 1, action.payload);\n    },\n    [unlikePost.rejected]: (state, action) => {\n      state.status = \"failed\";\n      state.error = action.error.message;\n    },\n    [postComment.fulfilled]: (state, action) => {\n      state.singlePost = action.payload;\n    },\n    [dropComment.fulfilled]: (state, action) => {\n      state.singlePost = action.payload;\n    },\n    [viewPost.fulfilled]: (state, action) => {\n      //console.log(\"action\",action.payload);\n      state.singlePost = action.payload;\n    },\n    [getUserPost.pending]: state => {\n      state.status = \"pending\";\n    },\n    [getUserPost.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.posts = action.payload;\n    },\n    [getUserPost.rejected]: (state, action) => {\n      state.status = \"failed\";\n      state.error = action.error;\n    },\n    [getAllLikedPost.pending]: state => {\n      state.status = \"pending\";\n    },\n    [getAllLikedPost.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.posts = action.payload;\n    },\n    [getAllLikedPost.rejected]: (state, action) => {\n      state.status = \"failed\";\n      state.error = action.error;\n    }\n  }\n});\nexport const {\n  LikeClicked,\n  DisLikeClicked\n} = postSlice.actions;\nexport default postSlice.reducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DateSetter\");","map":{"version":3,"sources":["E:/NeogCampProjects/LevelOneProjects/Social-Media/social-media-app/src/features/posts/postSlice.js"],"names":["createAsyncThunk","createSlice","axios","loadPosts","data","get","DateSetter","current","Date","cDate","getFullYear","getMonth","getDate","cTime","getHours","getMinutes","getSeconds","dateTime","createPost","content","image","fulfillWithValue","rejectWithValue","postData","desc","status","likes","comments","createdAt","modifiedAt","formData","FormData","fileName","now","name","append","post","url","err","console","log","message","error","response","likePost","postId","unlikePost","postComment","postid","comment","dropComment","viewPost","posts","getUserPost","userid","getAllLikedPost","postSlice","initialState","singlePost","reducers","extraReducers","fulfilled","state","action","push","payload","pending","rejected","existingPost","findIndex","_id","splice","LikeClicked","DisLikeClicked","actions","reducer"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nexport const loadPosts = createAsyncThunk(\r\n  \"posts/loadPosts\",\r\n  async () => {\r\n    const { data } = await axios.get(\r\n      \"https://Social-Media.saurabhsharma11.repl.co/v1/posts\"\r\n    );\r\n    //console.log(data);\r\n    return data;\r\n  }\r\n);\r\n\r\nexport function DateSetter(){\r\n    let current = new Date();\r\n    let cDate = current.getFullYear() + '-' + (current.getMonth() + 1) + '-' + current.getDate();\r\n    let cTime = current.getHours() + \":\" + current.getMinutes() + \":\" + current.getSeconds();\r\n    let dateTime = cDate + ',' + cTime;\r\n    return dateTime;\r\n}\r\n\r\nexport const createPost = createAsyncThunk(\"post/createPost\",\r\n  async ({ content,image }, { fulfillWithValue, rejectWithValue }) => {\r\n    let postData = {\r\n      desc: content,\r\n      status: \"A\",\r\n      likes: [],\r\n      comments: [],\r\n      createdAt: DateSetter(),\r\n      modifiedAt: DateSetter()\r\n    };\r\n\r\n    if (image) {\r\n      const formData = new FormData();\r\n      const fileName = Date().now + image.name;\r\n      formData.append(\"image\", image);\r\n      formData.append(\"name\", fileName);\r\n      try {\r\n        const { data, status } = await axios.post(\r\n            \"https://social-media.saurabhsharma11.repl.co/v1/images/upload\",\r\n            formData\r\n        );\r\n        if (status === 201) {\r\n            postData.image = data.url;\r\n        }\r\n      } catch (err) {\r\n        console.log(err.message);\r\n      }\r\n    }\r\n\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"https://social-media.saurabhsharma11.repl.co/v1/posts\",\r\n          postData\r\n      );\r\n      return fulfillWithValue(data.post);\r\n    } catch (error) {\r\n      return rejectWithValue(error.response);\r\n    }\r\n  }\r\n);\r\n\r\nexport const likePost = createAsyncThunk(\"post/likePost\", \r\n  async (postId, { fulfillWithValue, rejectWithValue }) => {\r\n    try {\r\n      const { status, data } = await axios.post(\r\n        `https://Social-Media.saurabhsharma11.repl.co/v1/posts/likepost/${postId}`\r\n      );\r\n      console.log(status,data);\r\n      if (status === 201) {\r\n        return fulfillWithValue(data);\r\n      }\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const unlikePost = createAsyncThunk(\r\n    \"post/unlikePost\",\r\n    async (postId, { fulfillWithValue, rejectWithValue }) => {\r\n      try {\r\n        const { status, data } = await axios.post(\r\n          `https://Social-Media.saurabhsharma11.repl.co/v1/posts/unlikepost/${postId}`\r\n        );\r\n        if (status === 200) {\r\n          return fulfillWithValue(data);\r\n        }\r\n      } catch (error) {\r\n        return rejectWithValue(error);\r\n      }\r\n    }\r\n);\r\n\r\nexport const postComment = createAsyncThunk(\r\n  \"post/postComment\",\r\n  async ({ postid, comment }, { fulfillWithValue, rejectWithValue }) => {\r\n    try {\r\n      const { status, data } = await axios.post(\r\n        `https://Social-Media.saurabhsharma11.repl.co/v1/posts/comment/${postid}`,\r\n        { comment }\r\n      );\r\n      if (status === 201) {\r\n        return fulfillWithValue(data);\r\n      }\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const dropComment = createAsyncThunk(\r\n  \"post/unComment\",\r\n  async ({ postid }, { fulfillWithValue, rejectWithValue }) => {\r\n    console.log(postid);\r\n    try {\r\n      const { status, data } = await axios.post(\r\n        `https://Social-Media.saurabhsharma11.repl.co/v1/posts/uncomment/${postid}`\r\n      );\r\n      if (status === 201) {\r\n        return fulfillWithValue(data);\r\n      }\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const viewPost = createAsyncThunk(\"post/viewPost\", \r\n    async (postid, { fulfillWithValue, rejectWithValue }) => {\r\n        try {\r\n          //console.log(\"slice\",postid);\r\n            const { status, data } = await axios.get(\r\n                `https://Social-Media.saurabhsharma11.repl.co/v1/posts/viewpost/${postid}`\r\n            );\r\n            //console.log(\"api\",data);\r\n            if (status === 200) {\r\n                return fulfillWithValue(data.posts);\r\n            }\r\n        } catch (error) {\r\n            return rejectWithValue(error);\r\n        }\r\n    }\r\n);\r\n\r\nexport const getUserPost = createAsyncThunk(\r\n  \"post/getUserPost\",\r\n  async (userid) => {\r\n    const response = await axios.get(\r\n      `https://Social-Media.saurabhsharma11.repl.co/v1/posts/${userid}/allposts`\r\n    );\r\n    //console.log(\"getUserPost\",response);\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const getAllLikedPost = createAsyncThunk(\r\n  \"post/getAllLikedPost\",\r\n  async (userid) => {\r\n    const response = await axios.get(\r\n      `https://Social-Media.saurabhsharma11.repl.co/v1/posts/${userid}/likedposts`\r\n    );\r\n\r\n    return response.data;\r\n  }\r\n);\r\n\r\n\r\nexport const postSlice = createSlice({\r\n  name: \"posts\",\r\n  initialState: {\r\n    status: \"idle\",\r\n    error: null,\r\n    posts: [],\r\n    singlePost: \"\"\r\n  },\r\n  reducers: {},\r\n  extraReducers: {\r\n    [createPost.fulfilled]: (state, action) => {\r\n      state.posts.push(action.payload);\r\n      //console.log(\"reducer\", action.payload.post);\r\n    },\r\n    [loadPosts.pending]: (state) => {\r\n      state.status = \"loading\";\r\n    },\r\n    [loadPosts.fulfilled]: (state, { payload }) => {\r\n      state.status = \"fulfilled\";\r\n      state.posts = payload.posts;\r\n    },\r\n    [loadPosts.rejected]: (state, action) => {\r\n      state.status = \"error\";\r\n      state.error = action.error.message;\r\n    },\r\n    [likePost.pending]: (state) => {\r\n      state.status = \"pending\";\r\n    },\r\n    [likePost.fulfilled]: (state, action) => {\r\n      state.status = \"success\";\r\n      const existingPost = state.posts.findIndex((post) => post._id === action.payload._id);\r\n      state.posts.splice(existingPost, 1, action.payload);\r\n    },\r\n    [likePost.rejected]: (state, action) => {\r\n      state.status = \"failed\";\r\n      state.error = action.error.message;\r\n    },\r\n    [unlikePost.pending]: (state) => {\r\n      state.status = \"pending\";\r\n    },\r\n    [unlikePost.fulfilled]: (state, action) => {\r\n      state.status = \"success\";\r\n      const existingPost = state.posts.findIndex(\r\n        (post) => post._id === action.payload._id\r\n      );\r\n      state.posts.splice(existingPost, 1, action.payload);\r\n    },\r\n    [unlikePost.rejected]: (state, action) => {\r\n      state.status = \"failed\";\r\n      state.error = action.error.message;\r\n    },\r\n    [postComment.fulfilled]: (state, action) => {\r\n      state.singlePost = action.payload;\r\n    },\r\n    [dropComment.fulfilled]: (state, action) => {\r\n      state.singlePost = action.payload;\r\n    },\r\n    [viewPost.fulfilled]: (state, action) => {\r\n      //console.log(\"action\",action.payload);\r\n      state.singlePost = action.payload;\r\n    },\r\n    [getUserPost.pending]: (state) => {\r\n      state.status = \"pending\";\r\n    },\r\n    [getUserPost.fulfilled]: (state, action) => {\r\n      state.status = \"success\";\r\n      state.posts = action.payload;\r\n    },\r\n    [getUserPost.rejected]: (state, action) => {\r\n      state.status = \"failed\";\r\n      state.error = action.error;\r\n    },\r\n    [getAllLikedPost.pending]: (state) => {\r\n      state.status = \"pending\";\r\n    },\r\n    [getAllLikedPost.fulfilled]: (state, action) => {\r\n      state.status = \"success\";\r\n      state.posts = action.payload;\r\n    },\r\n    [getAllLikedPost.rejected]: (state, action) => {\r\n      state.status = \"failed\";\r\n      state.error = action.error;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { LikeClicked, DisLikeClicked } = postSlice.actions;\r\n\r\nexport default postSlice.reducer;"]},"metadata":{},"sourceType":"module"}